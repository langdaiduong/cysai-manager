{"version":3,"sources":["dataProvider.js","Dashboard.js","components/chat/MyMessage.jsx","components/chat/TheirMessage.jsx","components/chat/MessageForm.jsx","components/chat/ChatFeed.jsx","Chat.js","authProvider.js","components/ResetViewsButton.js","components/employees/EmployeesList.js","components/employees/EmployeesEdit.js","components/employees/EmployeesCreate.js","components/users/UsersList.js","components/users/UsersEdit.js","components/users/UsersCreate.js","components/salary/SalariesList.js","components/salary/SalariesEdit.js","components/salary/SalariesCreate.js","components/votes/VotesList.js","components/votes/VotesEdit.js","components/votes/VotesCreate.js","components/timekeeping/TimeKeepingList.js","components/timekeeping/TimeKeepingEdit.js","components/timekeeping/TimeKeepingCreate.js","App.js","serviceWorker.js","index.js","inMemoryJWT.js"],"names":["apiUrl","httpClient","fetchUtils","fetchJson","getList","resource","params","pagination","page","perPage","sort","field","order","query","JSON","stringify","range","filter","url","then","headers","data","json","map","id","_id","total","parseInt","get","split","pop","getOne","getMany","ids","getManyReference","target","update","method","body","updateMany","create","delete","deleteMany","Card","Title","title","CardContent","MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","isTyping","htmlFor","PictureOutlined","type","multiple","display","files","bind","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","people","person","keys","Object","key","index","lastMessageKey","isMyMessage","width","last_read","renderReadReceipts","renderMessages","height","Chat","userSecret","projectID","renderChatFeed","chatAppProps","onNewMessage","Audio","play","authProvider","login","password","request","Request","Headers","credentials","inMemoryJWT","setRefreshTokenEndpoint","fetch","response","status","Error","statusText","accessToken","permissions","refreshToken","localStorage","setItem","setToken","logout","ereaseToken","Promise","resolve","checkAuth","waitForTokenRefresh","console","log","getToken","reject","checkError","error","getPermissions","role","getItem","ResetViewsButton","selectedIds","refresh","useRefresh","notify","useNotify","unselectAll","useUnselectAll","useUpdateMany","views","onSuccess","onFailure","loading","Button","label","disabled","onClick","VisibilityOff","EmployeesBulkActionButtons","BulkDeleteButton","EmployeesFilter","Filter","TextInput","source","alwaysOn","ReferenceInput","reference","allowEmpty","SelectInput","optionText","EmployeesList","List","filters","bulkActionButtons","Datagrid","TextField","DateField","EmailField","EditButton","basePath","DeleteWithConfirmButton","ShowButton","EmployeesEdit","Edit","SimpleForm","DateInput","choices","name","validate","required","EmployeesCreate","Create","PaginationActions","Pagination","ActionsComponent","UsersFilter","UsersList","UsersEdit","PasswordInput","UsersCreate","SalariesFilter","SalariesList","NumberField","SalariesEdit","NumberInput","SalariesCreate","VotesFilter","VotesList","VotesEdit","VotesCreate","TimeKeepingFilter","TimeKeepingList","TimeKeepingEdit","TimeKeepingCreate","MyLoginPage","Login","App","Admin","dataProvider","dashboard","Dashboard","loginPage","Resource","list","edit","icon","EmployeeIcon","UserIcon","SalaryList","SalaryEdit","SalaryCreate","AccountBalanceIcon","ThumbUpAltSharpIcon","MenuBookSharpIcon","ChatIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","inMemoryJWTManager","refreshTimeOutId","isRefreshing","logoutEventName","refreshEndpoint","getRefreshedToken","global","token","tokenExpiry","delay","setTimeout","clearTimeout","Date","now","addEventListener","setLogoutEventName","endpoint"],"mappings":"+SAGMA,EAAS,4BACTC,EAAaC,IAAWC,UAEf,GACbC,QAAS,SAACC,EAAUC,GAClB,MAA0BA,EAAOC,WAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAAyBH,EAAOI,KAAxBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACTC,EAAQ,CACZH,KAAMI,KAAKC,UAAU,CAACJ,EAAOC,IAC7BI,MAAOF,KAAKC,UAAU,EAAEP,EAAO,GAAKC,EAASD,EAAOC,EAAU,IAC9DQ,OAAQH,KAAKC,UAAUT,EAAOW,SAE1BC,EAAG,UAAMlB,EAAN,YAAgBK,EAAhB,YAA4BU,oBAAUF,IAE/C,OAAOZ,EAAWiB,GAAKC,MAAK,gBAAGC,EAAH,EAAGA,QAAH,MAAwB,CAClDC,KAD0B,EAAYC,KAC3BC,KAAI,SAAClB,GAAD,mBAAC,eAAmBA,GAApB,IAA8BmB,GAAInB,EAASoB,SAC1DC,MAAOC,SAASP,EAAQQ,IAAI,iBAAiBC,MAAM,KAAKC,MAAO,SAGnEC,OAAQ,SAAC1B,EAAUC,GAAX,OACNL,EAAW,GAAD,OAAID,EAAJ,YAAcK,EAAd,YAA0BC,EAAOkB,KAAML,MAAK,gBAAGG,EAAH,EAAGA,KAAH,MAAe,CACnED,KAAK,2BAAMC,GAAP,IAAaE,GAAIF,EAAKG,WAG9BO,QAAS,SAAC3B,EAAUC,GAClB,IAAMO,EAAQ,CACZI,OAAQH,KAAKC,UAAU,CAAES,GAAIlB,EAAO2B,OAEhCf,EAAG,UAAMlB,EAAN,YAAgBK,EAAhB,YAA4BU,oBAAUF,IAC/C,OAAOZ,EAAWiB,GAAKC,MAAK,kBAAe,CACzCE,KAD0B,EAAGC,KAClBC,KAAI,SAAClB,GAAD,mBAAC,eAAmBA,GAApB,IAA8BmB,GAAInB,EAASoB,cAI9DS,iBAAkB,SAAC7B,EAAUC,GAC3B,MAA0BA,EAAOC,WAAzBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAAyBH,EAAOI,KAAxBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACTC,EAAQ,CACZH,KAAMI,KAAKC,UAAU,CAACJ,EAAOC,IAC7BI,MAAOF,KAAKC,UAAU,EAAEP,EAAO,GAAKC,EAASD,EAAOC,EAAU,IAC9DQ,OAAQH,KAAKC,UAAL,2BACHT,EAAOW,QADJ,kBAELX,EAAO6B,OAAS7B,EAAOkB,OAGtBN,EAAG,UAAMlB,EAAN,YAAgBK,EAAhB,YAA4BU,oBAAUF,IAE/C,OAAOZ,EAAWiB,GAAKC,MAAK,gBAAGC,EAAH,EAAGA,QAAH,MAAwB,CAClDC,KAD0B,EAAYC,KAC3BC,KAAI,SAAClB,GAAD,mBAAC,eAAmBA,GAApB,IAA8BmB,GAAInB,EAASoB,SAC1DC,MAAOC,SAASP,EAAQQ,IAAI,iBAAiBC,MAAM,KAAKC,MAAO,SAInEM,OAAQ,SAAC/B,EAAUC,GAAX,OACNL,EAAW,GAAD,OAAID,EAAJ,YAAcK,EAAd,YAA0BC,EAAOkB,IAAM,CAC/Ca,OAAQ,MACRC,KAAMxB,KAAKC,UAAUT,EAAOe,QAC3BF,MAAK,gBAAGG,EAAH,EAAGA,KAAH,MAAe,CAAED,KAAK,2BAAMC,GAAP,IAAaE,GAAIF,EAAKG,WAErDc,WAAY,SAAClC,EAAUC,GACrB,IAAMO,EAAQ,CACZI,OAAQH,KAAKC,UAAU,CAAES,GAAIlB,EAAOkB,MAEtC,OAAOvB,EAAW,GAAD,OAAID,EAAJ,YAAcK,EAAd,YAA0BU,oBAAUF,IAAU,CAC7DwB,OAAQ,MACRC,KAAMxB,KAAKC,UAAUT,EAAOe,QAC3BF,MAAK,gBAAGG,EAAH,EAAGA,KAAH,MAAe,CAAED,KAAMC,EAAME,GAAIF,EAAKG,SAGhDe,OAAQ,SAACnC,EAAUC,GAAX,OACNL,EAAW,GAAD,OAAID,EAAJ,YAAcK,GAAY,CAClCgC,OAAQ,OACRC,KAAMxB,KAAKC,UAAUT,EAAOe,QAC3BF,MAAK,gBAAGG,EAAH,EAAGA,KAAH,MAAe,CACrBD,KAAK,2BAAMf,EAAOe,MAAd,IAAoBG,GAAIF,EAAKG,WAGrCgB,OAAQ,SAACpC,EAAUC,GAAX,OACNL,EAAW,GAAD,OAAID,EAAJ,YAAcK,EAAd,YAA0BC,EAAOkB,IAAM,CAC/Ca,OAAQ,SACRC,KAAMxB,KAAKC,UAAUT,EAAOmB,OAC3BN,MAAK,gBAAGG,EAAH,EAAGA,KAAH,mBAAC,eACJA,GADG,IAENE,GAAIF,EAAKG,UAGbiB,WAAY,SAACrC,EAAUC,GACrB,IAAMO,EAAQ,CACZI,OAAQH,KAAKC,UAAU,CAAES,GAAIlB,EAAO2B,OAEtC,OAAOhC,EAAW,GAAD,OAAID,EAAJ,YAAcK,EAAd,YAA0BU,oBAAUF,IAAU,CAC7DwB,OAAQ,SACRC,KAAMxB,KAAKC,UAAUT,EAAOe,QAC3BF,MAAK,kBAAe,CAAEE,KAAjB,EAAGC,W,0BC5FA,oBACX,gBAACqB,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,CAAOC,MAAM,qBACb,gBAACC,EAAA,EAAD,8E,SCaOC,G,OAnBG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OAAIA,EAAQC,aAAeD,EAAQC,YAAYC,OAAS,EAEpD,yBACEC,IAAKH,EAAQC,YAAY,GAAGG,KAC5BC,IAAI,qBACJC,UAAU,gBACVC,MAAO,CAAEC,MAAO,WAMpB,yBAAKF,UAAU,UAAUC,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,MAAO,QAASC,gBAAiB,YACrGX,EAAQY,QCeAC,EA7BM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAad,EAAc,EAAdA,QAC7Be,GAAwBD,GAAeA,EAAYE,OAAOC,WAAajB,EAAQgB,OAAOC,SAE5F,OACE,yBAAKX,UAAU,eACZS,GACC,yBACET,UAAU,iBACVC,MAAO,CAAEW,gBAAiBlB,EAAQgB,QAAR,cAAyBhB,EAAQgB,OAAOG,OAAxC,QAG7BnB,EAAQC,aAAeD,EAAQC,YAAYC,OAAS,EAEjD,yBACEC,IAAKH,EAAQC,YAAY,GAAGG,KAC5BC,IAAI,qBACJC,UAAU,gBACVC,MAAO,CAAEa,WAAYL,EAAuB,MAAQ,UAItD,yBAAKT,UAAU,UAAUC,MAAO,CAAEC,MAAO,OAAQG,gBAAiB,UAAWS,WAAYL,EAAuB,MAAQ,SACrHf,EAAQY,Q,2BCmCNS,EAtDK,SAACC,GACnB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAQVC,EAAe,SAACC,GACpBA,EAAMC,iBAEN,IAAMlB,EAAOY,EAAMO,OAEfnB,EAAKV,OAAS,GAChB8B,YAAYL,EAAOD,EAAQ,CAAEd,SAG/Ba,EAAS,KAOX,OACE,0BAAMnB,UAAU,eAAe2B,SAAUL,GACvC,2BACEtB,UAAU,gBACV4B,YAAY,oBACZV,MAAOA,EACPW,SA5Be,SAACN,GACpBJ,EAASI,EAAM1C,OAAOqC,OAEtBY,YAASd,EAAOI,IA0BZO,SAAUL,IAEZ,2BAAOS,QAAQ,iBACb,0BAAM/B,UAAU,gBACd,kBAACgC,EAAA,EAAD,CAAiBhC,UAAU,mBAG/B,2BACEiC,KAAK,OACLC,UAAU,EACVhE,GAAG,gBACH+B,MAAO,CAAEkC,QAAS,QAClBN,SAvBe,SAACN,GACpBG,YAAYL,EAAOD,EAAQ,CAAEgB,MAAOb,EAAM1C,OAAOuD,MAAO9B,KAAM,MAsBnC+B,K,aAEzB,4BAAQJ,KAAK,SAASjC,UAAU,eAC9B,kBAACsC,EAAA,EAAD,CAActC,UAAU,iBCWjBuC,EA1DE,SAACvB,GAChB,IAAQwB,EAA0CxB,EAA1CwB,MAAOC,EAAmCzB,EAAnCyB,WAAYC,EAAuB1B,EAAvB0B,SAAUC,EAAa3B,EAAb2B,SAE/BC,EAAOJ,GAASA,EAAMC,GAoC5B,OAAKG,EAGH,yBAAK5C,UAAU,aACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,cAAf,OAA6B4C,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMrD,OACnC,yBAAKS,UAAU,iBACZ4C,EAAKC,OAAO5E,KAAI,SAAC6E,GAAD,iBAAgBA,EAAOA,OAAOnC,eA9BhC,WACrB,IAAMoC,EAAOC,OAAOD,KAAKJ,GAEzB,OAAOI,EAAK9E,KAAI,SAACgF,EAAKC,GACpB,IAAMxD,EAAUiD,EAASM,GACnBE,EAA2B,IAAVD,EAAc,KAAOH,EAAKG,EAAQ,GACnDE,EAAcV,IAAahD,EAAQgB,OAAOC,SAEhD,OACE,yBAAKsC,IAAG,cAASC,GAASjD,MAAO,CAAEoD,MAAO,SACxC,yBAAKrD,UAAU,iBACZoD,EACG,kBAAC,EAAD,CAAW1D,QAASA,IACpB,kBAAC,EAAD,CAAcA,QAASA,EAASc,YAAamC,EAASQ,MAE5D,yBAAKnD,UAAU,gBAAgBC,MAAO,CAAEE,YAAaiD,EAAc,OAAS,MAAOtC,WAAYsC,EAAc,MAAQ,SA1BlG,SAAC1D,EAAS0D,GAAV,OAA0BR,EAAKC,OAAO5E,KAAI,SAAC6E,EAAQI,GAAT,OAAmBJ,EAAOQ,YAAc5D,EAAQxB,IACnH,yBACE+E,IAAG,eAAUC,GACblD,UAAU,eACVC,MAAO,CACLC,MAAOkD,EAAc,QAAU,OAC/BxC,gBAAiBkC,EAAOA,OAAOjC,QAAd,cAA+BiC,EAAOA,OAAOjC,OAA7C,WAqBZ0C,CAAmB7D,EAAS0D,QAiBlCI,GACD,yBAAKvD,MAAO,CAAEwD,OAAQ,WACtB,yBAAKzD,UAAU,0BACb,kBAAC,EAAD,iBAAiBgB,EAAjB,CAAwBI,OAAQqB,OAbpB,+BCjBLiB,EApBF,WACX,OACE,kBAAC,IAAD,CACED,OAAO,QAEPf,SAAS,eACTiB,WAAW,iBACXC,UATY,uCAYZC,eAAgB,SAACC,GAAD,OAAkB,kBAAC,EAAaA,IAChDC,aAAc,kBACZ,IAAIC,MACF,yDACAC,W,QCuCKC,EA1DM,CACnBC,MAAO,YAA6B,IAA1BxD,EAAyB,EAAzBA,SAAUyD,EAAe,EAAfA,SACZC,EAAU,IAAIC,QAAQ,8BAA+B,CACzDvF,OAAQ,OACRC,KAAMxB,KAAKC,UAAU,CAAEkD,WAAUyD,aACjCtG,QAAS,IAAIyG,QAAQ,CAAE,eAAgB,qBACvCC,YAAa,YAGf,OADAC,IAAYC,wBAAwB,uCAC7BC,MAAMN,GACVxG,MAAK,SAAC+G,GACL,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAC9C,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAAS5G,UAEjBH,MAAK,YAAiD,IAA9CmH,EAA6C,EAA7CA,YAA2BC,GAAkB,EAAhCC,aAAgC,EAAlBD,aAElC,OADAE,aAAaC,QAAQ,cAAeH,GAC7BR,IAAYY,SAASL,EAAa,SAI/CM,OAAQ,WACU,IAAIhB,QAAQ,+BAAgC,CAC1DvF,OAAQ,MACRjB,QAAS,IAAIyG,QAAQ,CAAE,eAAgB,qBACvCC,YAAa,YAIf,OAFAC,IAAYc,cAELC,QAAQC,WAGjBC,UAAW,WACT,OAAOjB,IAAYkB,sBAAsB9H,MAAK,WAE5C,OADA+H,QAAQC,IAAI,cACLpB,IAAYqB,WAAaN,QAAQC,UAAYD,QAAQO,aAIhEC,WAAY,SAACC,GACX,IAAMpB,EAASoB,EAAMpB,OACrB,OAAe,MAAXA,GAA6B,MAAXA,GACpBJ,IAAYc,cACLC,QAAQO,UAEVP,QAAQC,WAGjBS,eAAgB,WACd,IAAMC,EAAOhB,aAAaiB,QAAQ,eAClC,OAAOD,EAAOX,QAAQC,QAAQU,GAAQX,QAAQO,W,iKCdnCM,EA7BU,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAClBC,EAAUC,cACVC,EAASC,cACTC,EAAcC,cACpB,EAAkCC,YAC9B,YACAP,EACA,CAAEQ,MAAO,GACT,CACIC,UAAW,WACPR,IACAE,EAAO,qBACPE,EAAY,cAEhBK,UAAW,SAAAf,GAAK,OAAIQ,EAAO,+BAAgC,cAVnE,mBAAOxH,EAAP,KAAqBgI,EAArB,KAAqBA,QAcrB,OACI,gBAACC,EAAA,EAAD,CACIC,MAAM,cACNC,SAAUH,EACVI,QAASpI,GAET,gBAACqI,EAAA,EAAD,Q,SCbNC,EAA6B,SAAAvG,GAAK,OACpC,kBAAC,WAAD,KACI,kBAAC,EAAD,eAAkBmG,MAAM,eAAkBnG,IAE1C,kBAACwG,EAAA,EAAqBxG,KAGxByG,EAAkB,SAACzG,GAAD,OACpB,kBAAC0G,EAAA,EAAW1G,EACR,kBAAC2G,EAAA,EAAD,CAAWR,MAAM,SAASS,OAAO,IAAIC,UAAQ,IAC7C,kBAACC,EAAA,EAAD,CAAgBX,MAAM,OAAOS,OAAO,OAAOG,UAAU,YAAYC,YAAU,GACvE,kBAACC,EAAA,EAAD,CAAaC,WAAW,YA0BrBC,GArBO,SAACnH,GACrB,OACE,kBAACoH,EAAA,EAAD,iBAAUpH,EAAV,CAAiBqH,QAAS,kBAAC,EAAD,MAAoBC,kBAAmB,kBAAC,EAAD,QAC/D,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWZ,OAAO,MAAMT,MAAQ,OAChC,kBAACqB,EAAA,EAAD,CAAWZ,OAAO,SAClB,kBAACa,EAAA,EAAD,CAAWb,OAAO,kBAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,YAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,kBAACc,EAAA,EAAD,CAAYd,OAAO,UACnB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,aAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,kBAACa,EAAA,EAAD,CAAWb,OAAO,oBAClB,kBAACe,EAAA,EAAD,CAAYxB,MAAM,OAAOyB,SAAS,eAClC,kBAACC,EAAA,EAAD,CAAyB1B,MAAM,SAASyB,SAAS,eACjD,kBAACE,EAAA,EAAD,CAAYlB,OAAO,Y,wCC3BZmB,GAvBO,SAAC/H,GACrB,OACE,kBAACgI,GAAA,EAAShI,EACR,kBAACiI,GAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAWP,UAAQ,EAACQ,OAAO,OAC3B,kBAACD,EAAA,EAAD,CAAWC,OAAO,SAClB,kBAACsB,GAAA,EAAD,CAAWtB,OAAO,kBAClB,kBAACK,EAAA,EAAD,CAAaL,OAAO,SAASuB,QAAS,CACpC,CAAEjL,GAAI,MAAOkL,KAAM,OACnB,CAAElL,GAAI,UAAMkL,KAAM,WAClB,CAAElL,GAAI,+BAAmBkL,KAAM,mCAEjC,kBAACzB,EAAA,EAAD,CAAWC,OAAO,UAAUyB,SAAUC,iBACtC,kBAAC3B,EAAA,EAAD,CAAWC,OAAO,QAAQyB,SAAUC,iBACpC,kBAAC3B,EAAA,EAAD,CAAWC,OAAO,QAAQyB,SAAUC,iBACpC,kBAAC3B,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,kBAACsB,GAAA,EAAD,CAAWtB,OAAO,uB,UCWX2B,GAtBS,SAACvI,GACvB,OACE,kBAACwI,GAAA,EAAWxI,EACV,kBAACiI,GAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAWC,OAAO,SAClB,kBAACsB,GAAA,EAAD,CAAWtB,OAAO,kBAClB,kBAACK,EAAA,EAAD,CAAaL,OAAO,SAASuB,QAAS,CACpC,CAAEjL,GAAI,MAAOkL,KAAM,OACnB,CAAElL,GAAI,UAAMkL,KAAM,WAClB,CAAElL,GAAI,+BAAmBkL,KAAM,mCAEjC,kBAACzB,EAAA,EAAD,CAAWC,OAAO,YAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,kBAACsB,GAAA,EAAD,CAAWtB,OAAO,uB,oBCNb6B,GAAoB,SAAAzI,GAAK,OAAI,kBAAC,KAAD,iBAAyBA,EAAzB,CAAgCZ,MAAM,gBACnEsJ,GAAa,SAAA1I,GAAK,OAAI,kBAAC,KAAD,iBAAkBA,EAAlB,CAAyB2I,iBAAkBF,OAExEG,GAAc,SAAC5I,GAAD,OAChB,kBAAC0G,EAAA,EAAW1G,EACR,kBAAC2G,EAAA,EAAD,CAAWR,MAAM,SAASS,OAAO,IAAIC,UAAQ,IAC7C,kBAACC,EAAA,EAAD,CAAgBX,MAAM,OAAOS,OAAO,OAAOG,UAAU,QAAQC,YAAU,GACnE,kBAACC,EAAA,EAAD,CAAaC,WAAW,YAqBrB2B,GAjBG,SAAC7I,GACjB,OACE,kBAACoH,EAAA,EAAD,iBAAUpH,EAAV,CAAiBqH,QAAS,kBAAC,GAAD,MAAgBpL,WAAY,kBAAC,GAAD,QACpD,kBAACsL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWZ,OAAO,MAAMT,MAAQ,OAChC,kBAACqB,EAAA,EAAD,CAAWZ,OAAO,aAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,SAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,QAAQT,MAAQ,UAClC,kBAACsB,EAAA,EAAD,CAAWb,OAAO,eAClB,kBAACe,EAAA,EAAD,CAAYxB,MAAM,OAAOyB,SAAS,WAClC,kBAACC,EAAA,EAAD,CAAyB1B,MAAM,SAASyB,SAAS,WACjD,kBAACE,EAAA,EAAD,CAAYlB,OAAO,Y,UCPZkC,GAvBG,SAAC9I,GACjB,OACE,kBAACgI,GAAA,EAAShI,EACR,kBAACiI,GAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAWP,UAAQ,EAACQ,OAAO,OAC3B,kBAACD,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACmC,GAAA,EAAD,CAAenC,OAAO,aACtB,kBAACD,EAAA,EAAD,CAAWC,OAAO,SAClB,kBAACK,EAAA,EAAD,CACEL,OAAO,QACPuB,QAAS,CACP,CAAEjL,GAAI,WAAYkL,KAAM,YACxB,CAAElL,GAAI,QAASkL,KAAM,SACrB,CAAElL,GAAI,UAAWkL,KAAM,WACvB,CAAElL,GAAI,SAAUkL,KAAM,aAG1B,kBAACF,GAAA,EAAD,CAAWtB,OAAO,kBCGXoC,GArBK,SAAChJ,GACnB,OACE,kBAACwI,GAAA,EAAWxI,EACV,kBAACiI,GAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACmC,GAAA,EAAD,CAAenC,OAAO,aACtB,kBAACD,EAAA,EAAD,CAAWC,OAAO,SAClB,kBAACK,EAAA,EAAD,CACEL,OAAO,QACPuB,QAAS,CACP,CAAEjL,GAAI,WAAYkL,KAAM,YACxB,CAAElL,GAAI,QAASkL,KAAM,SACrB,CAAElL,GAAI,UAAWkL,KAAM,WACvB,CAAElL,GAAI,SAAUkL,KAAM,gB,UCL5Ba,GAAiB,SAACjJ,GAAD,OACnB,kBAAC0G,EAAA,EAAW1G,EACR,kBAAC2G,EAAA,EAAD,CAAWR,MAAM,SAASS,OAAO,IAAIC,UAAQ,IAC7C,kBAACC,EAAA,EAAD,CAAgBX,MAAM,OAAOS,OAAO,WAAWG,UAAU,WAAWC,YAAU,GAC1E,kBAACC,EAAA,EAAD,CAAaC,WAAW,gBA4BrBgC,GAxBM,SAAClJ,GACpB,OACE,kBAACoH,EAAA,EAAD,iBAAUpH,EAAV,CAAiBqH,QAAS,kBAAC,GAAD,QACxB,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWZ,OAAO,MAAMT,MAAQ,OAChC,kBAACqB,EAAA,EAAD,CAAWZ,OAAO,aAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,QAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,aAClB,kBAACuC,GAAA,EAAD,CAAavC,OAAO,WACpB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,cAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,kBAAkBT,MAAQ,SAC5C,kBAACqB,EAAA,EAAD,CAAWZ,OAAO,kBAAkBT,MAAQ,SAC5C,kBAACqB,EAAA,EAAD,CAAWZ,OAAO,kBAAkBT,MAAQ,SAC5C,kBAACqB,EAAA,EAAD,CAAWZ,OAAO,iBAClB,kBAACuC,GAAA,EAAD,CAAavC,OAAO,eACpB,kBAACa,EAAA,EAAD,CAAWb,OAAO,eAClB,kBAACe,EAAA,EAAD,CAAYxB,MAAM,OAAOyB,SAAS,cAClC,kBAACC,EAAA,EAAD,CAAyB1B,MAAM,SAASyB,SAAS,cACjD,kBAACE,EAAA,EAAD,CAAYlB,OAAO,Y,UCpBZwC,GArBM,SAACpJ,GACpB,OACE,kBAACgI,GAAA,EAAShI,EACR,kBAACiI,GAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAWP,UAAQ,EAACQ,OAAO,OAC3B,kBAACD,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,QAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,WACpB,kBAACD,EAAA,EAAD,CAAWC,OAAO,cAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,kBAAkBT,MAAQ,SAC5C,kBAACQ,EAAA,EAAD,CAAWC,OAAO,kBAAkBT,MAAQ,SAC5C,kBAACQ,EAAA,EAAD,CAAWC,OAAO,kBAAkBT,MAAQ,SAC5C,kBAACQ,EAAA,EAAD,CAAWC,OAAO,iBAClB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,eACpB,kBAACsB,GAAA,EAAD,CAAWtB,OAAO,kBCKX0C,GApBQ,SAACtJ,GACtB,OACE,kBAACwI,GAAA,EAAWxI,EACV,kBAACiI,GAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,QAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,WACpB,kBAACD,EAAA,EAAD,CAAWC,OAAO,cAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,kBAAkBT,MAAQ,SAC5C,kBAACQ,EAAA,EAAD,CAAWC,OAAO,kBAAkBT,MAAQ,SAC5C,kBAACQ,EAAA,EAAD,CAAWC,OAAO,kBAAkBT,MAAQ,SAC5C,kBAACQ,EAAA,EAAD,CAAWC,OAAO,iBAClB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,eACpB,kBAACsB,GAAA,EAAD,CAAWtB,OAAO,kBCDpB2C,GAAc,SAACvJ,GAAD,OAChB,kBAAC0G,EAAA,EAAW1G,EACR,kBAAC2G,EAAA,EAAD,CAAWR,MAAM,SAASS,OAAO,IAAIC,UAAQ,IAC7C,kBAACC,EAAA,EAAD,CAAgBX,MAAM,OAAOS,OAAO,WAAWG,UAAU,QAAQC,YAAU,GACvE,kBAACC,EAAA,EAAD,CAAaC,WAAW,gBA0BrBsC,GAtBG,SAACxJ,GACjB,OACE,kBAACoH,EAAA,EAAD,iBAAUpH,EAAV,CAAiBqH,QAAS,kBAAC,GAAD,QACxB,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWZ,OAAO,MAAMT,MAAO,OAC/B,kBAACqB,EAAA,EAAD,CAAWZ,OAAO,aAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,QAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,sBAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,mBAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,yBAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,eAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,mBAClB,kBAACa,EAAA,EAAD,CAAWb,OAAO,eAClB,kBAACe,EAAA,EAAD,CAAYxB,MAAM,OAAOyB,SAAS,WAClC,kBAACC,EAAA,EAAD,CAAyB1B,MAAM,SAASyB,SAAS,WACjD,kBAACE,EAAA,EAAD,CAAYlB,OAAO,OAAQgB,SAAS,cClB7B6B,GAnBG,SAACzJ,GACjB,OACE,kBAACgI,GAAA,EAAShI,EACR,kBAACiI,GAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAWP,UAAQ,EAACQ,OAAO,OAC3B,kBAACD,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,QAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,sBAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,mBAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,yBAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,eAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,mBAClB,kBAACsB,GAAA,EAAD,CAAWtB,OAAO,kBCIX8C,GAjBK,SAAC1J,GACnB,OACE,kBAACwI,GAAA,EAAWxI,EACV,kBAACiI,GAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,QAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,sBAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,mBAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,yBAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,eAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,mBAClB,kBAACsB,GAAA,EAAD,CAAWtB,OAAO,kBCGpB+C,GAAoB,SAAC3J,GAAD,OACtB,kBAAC0G,EAAA,EAAW1G,EACR,kBAAC2G,EAAA,EAAD,CAAWR,MAAM,SAASS,OAAO,IAAIC,UAAQ,IAC7C,kBAACC,EAAA,EAAD,CAAgBX,MAAM,OAAOS,OAAO,WAAWG,UAAU,cAAcC,YAAU,GAC7E,kBAACC,EAAA,EAAD,CAAaC,WAAW,gBA0BrB0C,GAtBS,SAAC5J,GACvB,OACE,kBAACoH,EAAA,EAAD,iBAAUpH,EAAV,CAAiBqH,QAAS,kBAAC,GAAD,QACxB,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWZ,OAAO,MAAMT,MAAQ,OAChC,kBAACqB,EAAA,EAAD,CAAWZ,OAAO,aAClB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,aAClB,kBAACuC,GAAA,EAAD,CAAavC,OAAO,aACpB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,iBAClB,kBAACuC,GAAA,EAAD,CAAavC,OAAO,aACpB,kBAACuC,GAAA,EAAD,CAAavC,OAAO,YACpB,kBAACuC,GAAA,EAAD,CAAavC,OAAO,aACpB,kBAACY,EAAA,EAAD,CAAWZ,OAAO,UAClB,kBAACa,EAAA,EAAD,CAAWb,OAAO,eAClB,kBAACe,EAAA,EAAD,CAAYxB,MAAM,OAAOyB,SAAS,iBAClC,kBAACC,EAAA,EAAD,CAAyB1B,MAAM,SAASyB,SAAS,iBACjD,kBAACE,EAAA,EAAD,CAAYlB,OAAO,YCpBZiD,GAnBS,SAAC7J,GACvB,OACE,kBAACgI,GAAA,EAAShI,EACR,kBAACiI,GAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAWP,UAAQ,EAACQ,OAAO,MAAMT,MAAQ,OACzC,kBAACQ,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,aACpB,kBAACD,EAAA,EAAD,CAAWC,OAAO,iBAClB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,aACpB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,YACpB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,aACpB,kBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,kBAACsB,GAAA,EAAD,CAAWtB,OAAO,kBCKXkD,GAlBW,SAAC9J,GACzB,OACE,kBAACwI,GAAA,EAAWxI,EACV,kBAACiI,GAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACD,EAAA,EAAD,CAAWC,OAAO,aAClB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,aACpB,kBAACD,EAAA,EAAD,CAAWC,OAAO,iBAClB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,aACpB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,YACpB,kBAACyC,GAAA,EAAD,CAAazC,OAAO,aACpB,kBAACD,EAAA,EAAD,CAAWC,OAAO,UAClB,kBAACsB,GAAA,EAAD,CAAWtB,OAAO,kB,8HC0BpBmD,GAAc,kBAChB,kBAACC,EAAA,EAAD,CAEIpK,gBAAgB,gIA8DTqK,OA1Df,WAEE,OACE,kBAACC,EAAA,EAAD,CAAOC,aAAcA,EAAcC,UAAWC,EAAWzI,KAAMA,EAAMsB,aAAcA,EAAcoH,UAAWP,KAC3G,SAAA9F,GAAW,MAAI,CACE,UAAhBA,GAA2C,aAAhBA,EACvB,kBAACsG,EAAA,EAAD,CACFnC,KAAK,YACLoC,KAAMrD,GACNsD,KAAsB,UAAhBxG,EAA0B8D,GAAgB,KAChD7J,OAAQqK,GACRmC,KAAMC,OAEL,KACa,UAAhB1G,EACI,kBAACsG,EAAA,EAAD,CACAnC,KAAK,QACLoC,KAAM3B,GACN4B,KAAsB,UAAhBxG,EAA0B6E,GAAY,KAC5C5K,OAAwB,UAAhB+F,EAA0B+E,GAAc,KAChD0B,KAAME,OAEP,KACa,YAAhB3G,GAA2C,UAAfA,EACxB,kBAACsG,EAAA,EAAD,CACAnC,KAAK,WACLoC,KAAMK,GACNJ,KAAMK,GACN5M,OAAQ6M,GACRL,KAAMM,OAEP,KACH,kBAACT,EAAA,EAAD,CACEnC,KAAK,QACLoC,KAAMhB,GACNiB,KAAMhB,GACNvL,OAAQwL,GACRgB,KAAMO,OAEQ,YAAhBhH,GAA2C,UAAfA,EACxB,kBAACsG,EAAA,EAAD,CACAnC,KAAK,cACLoC,KAAMZ,GACNa,KAAMZ,GACN3L,OAAQ4L,GACRY,KAAMQ,OAEP,KACH,kBAACX,EAAA,EAAD,CACEnC,KAAK,OACLoC,KAAM5I,EACN8I,KAAMS,YClGMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCANC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnP,MAAK,SAAAoP,GACJA,EAAaC,gBAEdC,OAAM,SAAAlH,GACLL,QAAQK,MAAMA,EAAMvG,a,iCE7H5B,YAqGe0N,IArGY,WACvB,IAIIC,EAJA5I,EAAc,KACd6I,EAAe,KACfC,EAAkB,YAClBC,EAAkB,iBAiChBC,EAAoB,WACtB,IAAMpJ,EAAU,IAAIC,QAAQkJ,EAAiB,CACzCzO,OAAQ,MACRjB,QAAS,IAAIyG,QAAQ,CAAE,eAAgB,qBACvCC,YAAa,YAuBjB,OApBA8I,EAAe3I,MAAMN,GAChBxG,MAAK,SAAC+G,GACH,OAAwB,MAApBA,EAASC,QACTU,IACAmI,EAAO9H,QAAQC,IACX,yBAEG,CAAE8H,MAAO,OAEb/I,EAAS5G,UAEnBH,MAAK,YAA6B,IAA1B8P,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACZ,OAAID,GACAtI,EAASsI,EAAOC,IACT,IAEXrI,KACO,OASbF,EAAW,SAACsI,EAAOE,GAGrB,OAFApJ,EAAckJ,EA3DG,SAACE,GAClBR,EAAmBhB,OAAOyB,WACtBL,EACQ,IAARI,EAAe,KAyDnB3I,CAAa2I,IACN,GAGLtI,EAAc,WAIhB,OAHAd,EAAc,KAzDV4I,GACAhB,OAAO0B,aAAaV,GA0DxBhB,OAAOlH,aAAaC,QAAQmI,EAAiBS,KAAKC,QAC3C,GAUX,OANA5B,OAAO6B,iBAAiB,WAAW,SAAC3M,GAC5BA,EAAM0B,MAAQsK,IACd9I,EAAc,SAIf,CACHc,cACAkI,oBACA3H,SAzBa,kBAAMrB,GA0BnB0J,mBAvFuB,SAAA/E,GAAI,OAAImE,EAAkBnE,GAwFjD1E,wBAvF4B,SAAA0J,GAAQ,OAAIZ,EAAkBY,GAwF1D/I,WACAM,oBAxEwB,WACxB,OAAK2H,EAGEA,EAAazP,MAAK,WAErB,OADAyP,EAAe,MACR,KAJA9H,QAAQC,YA0EZ2H,K","file":"static/js/main.884dad48.chunk.js","sourcesContent":["import { fetchUtils } from \"react-admin\";\r\nimport { stringify } from \"query-string\";\r\n\r\nconst apiUrl = \"http://localhost:3000/api\";\r\nconst httpClient = fetchUtils.fetchJson;\r\n\r\nexport default {\r\n  getList: (resource, params) => {\r\n    const { page, perPage } = params.pagination;\r\n    const { field, order } = params.sort;\r\n    const query = {\r\n      sort: JSON.stringify([field, order]),\r\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\r\n      filter: JSON.stringify(params.filter),\r\n    };\r\n    const url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n\r\n    return httpClient(url).then(({ headers, json }) => ({\r\n      data: json.map((resource) => ({ ...resource, id: resource._id })),\r\n      total: parseInt(headers.get(\"content-range\").split(\"/\").pop(), 10),\r\n    }));\r\n  },\r\n  getOne: (resource, params) =>\r\n    httpClient(`${apiUrl}/${resource}/${params.id}`).then(({ json }) => ({\r\n      data: { ...json, id: json._id },\r\n    })),\r\n\r\n  getMany: (resource, params) => {\r\n    const query = {\r\n      filter: JSON.stringify({ id: params.ids }),\r\n    };\r\n    const url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n    return httpClient(url).then(({ json }) => ({\r\n      data: json.map((resource) => ({ ...resource, id: resource._id })),\r\n    }));\r\n  },\r\n\r\n  getManyReference: (resource, params) => {\r\n    const { page, perPage } = params.pagination;\r\n    const { field, order } = params.sort;\r\n    const query = {\r\n      sort: JSON.stringify([field, order]),\r\n      range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\r\n      filter: JSON.stringify({\r\n        ...params.filter,\r\n        [params.target]: params.id,\r\n      }),\r\n    };\r\n    const url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n\r\n    return httpClient(url).then(({ headers, json }) => ({\r\n      data: json.map((resource) => ({ ...resource, id: resource._id })),\r\n      total: parseInt(headers.get(\"content-range\").split(\"/\").pop(), 10),\r\n    }));\r\n  },\r\n\r\n  update: (resource, params) =>\r\n    httpClient(`${apiUrl}/${resource}/${params.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(params.data),\r\n    }).then(({ json }) => ({ data: { ...json, id: json._id } })),\r\n\r\n  updateMany: (resource, params) => {\r\n    const query = {\r\n      filter: JSON.stringify({ id: params.id }),\r\n    };\r\n    return httpClient(`${apiUrl}/${resource}?${stringify(query)}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(params.data),\r\n    }).then(({ json }) => ({ data: json, id: json._id }));\r\n  },\r\n\r\n  create: (resource, params) =>\r\n    httpClient(`${apiUrl}/${resource}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(params.data),\r\n    }).then(({ json }) => ({\r\n      data: { ...params.data, id: json._id },\r\n    })),\r\n\r\n  delete: (resource, params) =>\r\n    httpClient(`${apiUrl}/${resource}/${params.id}`, {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(params._id),\r\n    }).then(({ json }) => ({\r\n      ...json,\r\n      id: json._id,\r\n    })),\r\n\r\n  deleteMany: (resource, params) => {\r\n    const query = {\r\n      filter: JSON.stringify({ id: params.ids }),\r\n    };\r\n    return httpClient(`${apiUrl}/${resource}?${stringify(query)}`, {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(params.data),\r\n    }).then(({ json }) => ({ data: json }));\r\n  },\r\n};\r\n","import * as React from \"react\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Title } from 'react-admin';\r\nexport default () => (\r\n    <Card>\r\n        <Title title=\"Employee manager\" />\r\n        <CardContent>Phần mềm quản lý nhân sự công ty Cysai</CardContent>\r\n    </Card>\r\n);","import React from 'react';\r\nconst MyMessage = ({ message }) => {\r\n  if (message.attachments && message.attachments.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"message-attachment\"\r\n        className=\"message-image\"\r\n        style={{ float: 'right' }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessage;","import React from 'react';\r\nconst TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n        />\r\n      )}\r\n      {message.attachments && message.attachments.length > 0\r\n        ? (\r\n          <img\r\n            src={message.attachments[0].file}\r\n            alt=\"message-attachment\"\r\n            className=\"message-image\"\r\n            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n          />\r\n        )\r\n        : (\r\n          <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n            {message.text}\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheirMessage;","import React, { useState } from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState('');\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n\r\n    setValue('');\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message...\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;","import React from 'react';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;","import React from \"react\";\r\nimport { ChatEngine } from \"react-chat-engine\";\r\nimport \"./App.css\";\r\nimport ChatFeed from \"./components/chat/ChatFeed.jsx\";\r\n\r\nconst projectID = \"0056905e-32d6-48aa-a93c-4c4d4808e8bb\";\r\n\r\nconst Chat = () => {\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      //userName=\"nguyenvananh\"\r\n      userName=\"langdaiduong\"\r\n      userSecret=\"xyz01634016082\"\r\n      projectID={projectID}\r\n      // userName={localStorage.getItem('username')}\r\n      // userSecret={localStorage.getItem('password')}\r\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n      onNewMessage={() =>\r\n        new Audio(\r\n          \"https://chat-engine-assets.s3.amazonaws.com/click.mp3\"\r\n        ).play()\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import inMemoryJWT from \"./inMemoryJWT\";\r\n\r\nconst authProvider = {\r\n  login: ({ username, password }) => {\r\n    const request = new Request(\"http://localhost:3000/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ username, password }),\r\n      headers: new Headers({ \"Content-Type\": \"application/json\" }),\r\n      credentials: \"include\",\r\n    });\r\n    inMemoryJWT.setRefreshTokenEndpoint(\"http://localhost:3000/refresh-token\");\r\n    return fetch(request)\r\n      .then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(({ accessToken, refreshToken, permissions }) => {\r\n        localStorage.setItem(\"permissions\", permissions);\r\n        return inMemoryJWT.setToken(accessToken, 10000);\r\n      });\r\n  },\r\n\r\n  logout: () => {\r\n    const request = new Request(\"http://localhost:3000/logout\", {\r\n      method: \"GET\",\r\n      headers: new Headers({ \"Content-Type\": \"application/json\" }),\r\n      credentials: \"include\",\r\n    });\r\n    inMemoryJWT.ereaseToken();\r\n\r\n    return Promise.resolve();\r\n  },\r\n\r\n  checkAuth: () => {\r\n    return inMemoryJWT.waitForTokenRefresh().then(() => {\r\n      console.log(\"check auth\");\r\n      return inMemoryJWT.getToken() ? Promise.resolve() : Promise.reject();\r\n    });\r\n  },\r\n\r\n  checkError: (error) => {\r\n    const status = error.status;\r\n    if (status === 401 || status === 403) {\r\n      inMemoryJWT.ereaseToken();\r\n      return Promise.reject();\r\n    }\r\n    return Promise.resolve();\r\n  },\r\n\r\n  getPermissions: () => {\r\n    const role = localStorage.getItem(\"permissions\");\r\n    return role ? Promise.resolve(role) : Promise.reject();\r\n    return inMemoryJWT.waitForTokenRefresh().then(() => {\r\n      return inMemoryJWT.getToken() ? Promise.resolve() : Promise.reject();\r\n    });\r\n  },\r\n};\r\n\r\nexport default authProvider;\r\n","import * as React from \"react\";\r\nimport {\r\n    Button,\r\n    useUpdateMany,\r\n    useRefresh,\r\n    useNotify,\r\n    useUnselectAll,\r\n} from 'react-admin';\r\nimport { VisibilityOff } from '@material-ui/icons';\r\n\r\nconst ResetViewsButton = ({ selectedIds }) => {\r\n    const refresh = useRefresh();\r\n    const notify = useNotify();\r\n    const unselectAll = useUnselectAll();\r\n    const [updateMany, { loading }] = useUpdateMany(\r\n        'employees',\r\n        selectedIds,\r\n        { views: 0 },\r\n        {\r\n            onSuccess: () => {\r\n                refresh();\r\n                notify('employees updated');\r\n                unselectAll('employees');\r\n            },\r\n            onFailure: error => notify('Error: employees not updated', 'warning'),\r\n        }\r\n    );\r\n\r\n    return (\r\n        <Button\r\n            label=\"Reset Views\"\r\n            disabled={loading}\r\n            onClick={updateMany}\r\n        >\r\n            <VisibilityOff />\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default ResetViewsButton;","import React from 'react';\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  EditButton,\r\n  DeleteButton,\r\n  DateField,\r\n  EmailField,\r\n  Filter,\r\n  SelectInput,\r\n  ReferenceInput,\r\n  TextInput,\r\n  DeleteWithConfirmButton,\r\n  ShowButton\r\n} from 'react-admin';\r\nimport ResetViewsButton from '../ResetViewsButton';\r\nimport { Fragment } from 'react';\r\n// import Button from '@material-ui/core/Button';\r\nimport { BulkDeleteButton } from 'react-admin';\r\n\r\nconst EmployeesBulkActionButtons = props => (\r\n    <Fragment>\r\n        <ResetViewsButton label=\"Reset Views\" {...props} />\r\n        {/* default bulk delete action */}\r\n        <BulkDeleteButton {...props} />\r\n    </Fragment>\r\n);\r\nconst EmployeesFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"Name\" source=\"name\" reference=\"employees\" allowEmpty>\r\n            <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nconst EmployeesList = (props) => {\r\n  return (\r\n    <List {...props} filters={<EmployeesFilter/>} bulkActionButtons={<EmployeesBulkActionButtons />}>\r\n      <Datagrid>\r\n        <TextField source=\"_id\" label = \"id\"/>\r\n        <TextField source=\"name\" />\r\n        <DateField source=\"date_of_birth\"/> \r\n        <TextField source=\"address\" />\r\n        <TextField source=\"phone\"/>\r\n        <EmailField source=\"email\" />\r\n        <TextField source=\"position\" />\r\n        <TextField source=\"level\" />         \r\n        <DateField source=\"date_of_joining\"/>             \r\n        <EditButton label=\"Edit\" basePath=\"/employees\" />\r\n        <DeleteWithConfirmButton label=\"Delete\" basePath=\"/employees\" />\r\n        <ShowButton source=\"Show\"/>\r\n      </Datagrid>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default EmployeesList;\r\n","import React from 'react';\r\nimport { Edit, SimpleForm, TextInput, DateInput, SelectInput, required} from 'react-admin';\r\nconst EmployeesEdit = (props) => {\r\n  return (\r\n    <Edit {...props}>\r\n      <SimpleForm>\r\n        <TextInput disabled source=\"id\" />\r\n        <TextInput source=\"name\" />\r\n        <DateInput source=\"date_of_birth\"/>\r\n        <SelectInput source=\"gender\" choices={[\r\n          { id: 'Nam', name: 'Nam' },\r\n          { id: 'Nữ', name: 'Nữ' },\r\n          { id: 'Giới tính thứ 3', name: 'Giới tính thứ 3' },\r\n        ]} />\r\n        <TextInput source=\"address\" validate={required()}/>\r\n        <TextInput source=\"phone\" validate={required()}/>\r\n        <TextInput source=\"email\" validate={required()}/>\r\n        <TextInput source=\"position\" />\r\n        <TextInput source=\"level\" />         \r\n        <DateInput source=\"date_of_joining\"/>   \r\n      </SimpleForm>\r\n    </Edit>\r\n  );\r\n};\r\n\r\nexport default EmployeesEdit;\r\n","import React from 'react';\r\nimport { \r\n  Create,\r\n  SimpleForm, \r\n  TextInput, \r\n  DateInput, \r\n  SelectInput\r\n  } from 'react-admin';\r\nconst EmployeesCreate = (props) => {\r\n  return (\r\n    <Create {...props}>\r\n      <SimpleForm >\r\n        <TextInput source=\"name\" />\r\n        <DateInput source=\"date_of_birth\"/>\r\n        <SelectInput source=\"gender\" choices={[\r\n          { id: 'Nam', name: 'Nam' },\r\n          { id: 'Nữ', name: 'Nữ' },\r\n          { id: 'Giới tính thứ 3', name: 'Giới tính thứ 3' },\r\n        ]} />\r\n        <TextInput source=\"address\" />\r\n        <TextInput source=\"phone\"/>\r\n        <TextInput source=\"email\" />\r\n        <TextInput source=\"position\" />\r\n        <TextInput source=\"level\" />         \r\n        <DateInput source=\"date_of_joining\"/>  \r\n      </SimpleForm >\r\n    </Create>\r\n  );\r\n};\r\n\r\nexport default EmployeesCreate;\r\n","import React from 'react';\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  EditButton,\r\n  DeleteButton,\r\n  DateField,\r\n  TextInput,\r\n  Filter,\r\n  SelectInput,\r\n  ReferenceInput,\r\n  Pagination as RaPagination,\r\n  PaginationActions as RaPaginationActions,\r\n  DeleteWithConfirmButton,\r\n  ShowButton\r\n} from 'react-admin';\r\n\r\nexport const PaginationActions = props => <RaPaginationActions {...props} color=\"secondary\" />;\r\nexport const Pagination = props => <RaPagination {...props} ActionsComponent={PaginationActions} />;\r\n\r\nconst UsersFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"Name\" source=\"name\" reference=\"users\" allowEmpty>\r\n            <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\nconst UsersList = (props) => {\r\n  return (\r\n    <List {...props} filters={<UsersFilter/>} pagination={<Pagination/>} >\r\n      <Datagrid>\r\n        <TextField source=\"_id\" label = \"id\"/>\r\n        <TextField source=\"username\" />\r\n        <TextField source=\"name\" />\r\n        <TextField source=\"roles\" label = \"Roles\"/>     \r\n        <DateField source=\"created_at\"/>             \r\n        <EditButton label=\"Edit\" basePath=\"/users\" />\r\n        <DeleteWithConfirmButton label=\"Delete\" basePath=\"/users\"/>\r\n        <ShowButton source=\"Show\"/>\r\n      </Datagrid>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React from \"react\";\r\nimport {\r\n  Edit,\r\n  SimpleForm,\r\n  TextInput,\r\n  DateInput,\r\n  PasswordInput,\r\n  SelectInput\r\n} from \"react-admin\";\r\n\r\nconst UsersEdit = (props) => {\r\n  return (\r\n    <Edit {...props}>\r\n      <SimpleForm>\r\n        <TextInput disabled source=\"id\" />\r\n        <TextInput source=\"username\" />\r\n        <PasswordInput source=\"password\" />\r\n        <TextInput source=\"name\" />\r\n        <SelectInput\r\n          source=\"roles\"\r\n          choices={[\r\n            { id: \"employee\", name: \"employee\" },\r\n            { id: \"admin\", name: \"admin\" },\r\n            { id: \"manager\", name: \"manager\" },\r\n            { id: \"leader\", name: \"leader\" },\r\n          ]}\r\n        />\r\n        <DateInput source=\"created_at\" />\r\n      </SimpleForm>\r\n    </Edit>\r\n  );\r\n};\r\n\r\nexport default UsersEdit;\r\n","import React from \"react\";\r\nimport {\r\n  Create,\r\n  SimpleForm,\r\n  TextInput,\r\n  DateInput,\r\n  PasswordInput,\r\n  SelectInput\r\n} from \"react-admin\";\r\nconst UsersCreate = (props) => {\r\n  return (\r\n    <Create {...props}>\r\n      <SimpleForm>\r\n        <TextInput source=\"username\" />\r\n        <PasswordInput source=\"password\" />\r\n        <TextInput source=\"name\" />\r\n        <SelectInput\r\n          source=\"roles\"\r\n          choices={[\r\n            { id: \"employee\", name: \"employee\" },\r\n            { id: \"admin\", name: \"admin\" },\r\n            { id: \"manager\", name: \"manager\" },\r\n            { id: \"leader\", name: \"leader\" },\r\n          ]}\r\n        />\r\n      </SimpleForm>\r\n    </Create>\r\n  );\r\n};\r\n\r\nexport default UsersCreate;\r\n","import React from 'react';\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  EditButton,\r\n  DeleteButton,\r\n  DateField,\r\n  NumberField,\r\n  Filter,\r\n  SelectInput,\r\n  ReferenceInput,\r\n  TextInput,\r\n  DeleteWithConfirmButton,\r\n  ShowButton\r\n} from 'react-admin';\r\n\r\nconst SalariesFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"Name\" source=\"fullname\" reference=\"salaries\" allowEmpty>\r\n            <SelectInput optionText=\"fullname\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\nconst SalariesList = (props) => {\r\n  return (\r\n    <List {...props} filters={<SalariesFilter/>}>\r\n      <Datagrid>\r\n        <TextField source=\"_id\" label = \"id\"/>\r\n        <TextField source=\"fullname\" />\r\n        <TextField source=\"stk\" />\r\n        <TextField source=\"position\" />\r\n        <NumberField source=\"salary\" />\r\n        <TextField source=\"allowance\" />        \r\n        <TextField source=\"insurrance.BHYT\" label = \"BHYT\"/>\r\n        <TextField source=\"insurrance.BHXH\" label = \"BHXH\"/>\r\n        <TextField source=\"insurrance.BHTN\" label = \"BHTN\"/> \r\n        <TextField source=\"tax_personal\" />\r\n        <NumberField source=\"salary_sum\" />                  \r\n        <DateField source=\"created_at\"/>                       \r\n        <EditButton label=\"Edit\" basePath=\"/salaries\" />\r\n        <DeleteWithConfirmButton label=\"Delete\" basePath=\"/salaries\" />\r\n        <ShowButton source=\"Show\"/>\r\n      </Datagrid>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default SalariesList;\r\n","import React from 'react';\r\nimport { Edit, SimpleForm, TextInput, DateInput, NumberInput} from 'react-admin';\r\nconst SalariesEdit = (props) => {\r\n  return (\r\n    <Edit {...props}>\r\n      <SimpleForm>\r\n        <TextInput disabled source=\"id\" />\r\n        <TextInput source=\"fullname\" />\r\n        <TextInput source=\"stk\" />\r\n        <TextInput source=\"position\" />\r\n        <NumberInput source=\"salary\" />\r\n        <TextInput source=\"allowance\" />        \r\n        <TextInput source=\"insurrance.BHYT\" label = \"BHYT\"/>\r\n        <TextInput source=\"insurrance.BHXH\" label = \"BHXH\"/>\r\n        <TextInput source=\"insurrance.BHTN\" label = \"BHTN\"/> \r\n        <TextInput source=\"tax_personal\" />\r\n        <NumberInput source=\"salary_sum\" />                  \r\n        <DateInput source=\"created_at\"/>  \r\n      </SimpleForm>\r\n    </Edit>\r\n  );\r\n};\r\n\r\nexport default SalariesEdit;\r\n","import React from 'react';\r\nimport { Create, SimpleForm, TextInput, DateInput, NumberInput  } from 'react-admin';\r\nconst SalariesCreate = (props) => {\r\n  return (\r\n    <Create {...props}>\r\n      <SimpleForm>\r\n        <TextInput source=\"fullname\" />\r\n        <TextInput source=\"stk\" />\r\n        <TextInput source=\"position\" />\r\n        <NumberInput source=\"salary\" />\r\n        <TextInput source=\"allowance\" />        \r\n        <TextInput source=\"insurrance.BHYT\" label = \"BHYT\"/>\r\n        <TextInput source=\"insurrance.BHXH\" label = \"BHXH\"/>\r\n        <TextInput source=\"insurrance.BHTN\" label = \"BHTN\"/> \r\n        <TextInput source=\"tax_personal\" />\r\n        <NumberInput source=\"salary_sum\" />                  \r\n        <DateInput source=\"created_at\"/>  \r\n      </SimpleForm>\r\n    </Create>\r\n  );\r\n};\r\n\r\nexport default SalariesCreate;\r\n","import React from 'react';\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  EditButton,\r\n  DateField,\r\n  Filter,\r\n  SelectInput,\r\n  ReferenceInput,\r\n  TextInput,\r\n  ShowButton,\r\n  DeleteWithConfirmButton\r\n} from 'react-admin';\r\n\r\nconst VotesFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"Name\" source=\"fullname\" reference=\"votes\" allowEmpty>\r\n            <SelectInput optionText=\"fullname\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\nconst VotesList = (props) => {\r\n  return (\r\n    <List {...props} filters={<VotesFilter/>}>\r\n      <Datagrid>\r\n        <TextField source=\"_id\" label =\"id\"/>\r\n        <TextField source=\"fullname\"/>\r\n        <TextField source=\"kpi\"/>\r\n        <TextField source=\"probationary_vote\"/>\r\n        <TextField source=\"promotion_vote\"/>\r\n        <TextField source=\"personal_development\"/>        \r\n        <TextField source=\"bonus\"/>\r\n        <TextField source=\"discipline\"/> \r\n        <TextField source=\"employees_vote\"/>                 \r\n        <DateField source=\"created_at\"/>           \r\n        <EditButton label=\"Edit\" basePath=\"/votes\"/>\r\n        <DeleteWithConfirmButton label=\"Delete\" basePath=\"/votes\"/>\r\n        <ShowButton source=\"Show\"  basePath=\"/votes\"/>\r\n      </Datagrid>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default VotesList;\r\n","import React from 'react';\r\nimport { Edit, SimpleForm, TextInput, DateInput, NumberInput} from 'react-admin';\r\nconst VotesEdit = (props) => {\r\n  return (\r\n    <Edit {...props}>\r\n      <SimpleForm>\r\n        <TextInput disabled source=\"id\"/>\r\n        <TextInput source=\"fullname\"/>\r\n        <TextInput source=\"kpi\"/>\r\n        <TextInput source=\"probationary_vote\"/>\r\n        <TextInput source=\"promotion_vote\"/>\r\n        <TextInput source=\"personal_development\"/>        \r\n        <TextInput source=\"bonus\"/>\r\n        <TextInput source=\"discipline\"/>\r\n        <TextInput source=\"employees_vote\"/>                 \r\n        <DateInput source=\"created_at\"/>  \r\n      </SimpleForm>\r\n    </Edit>\r\n  );\r\n};\r\n\r\nexport default VotesEdit;\r\n","import React from 'react';\r\nimport { Create, SimpleForm, TextInput, DateInput, NumberInput  } from 'react-admin';\r\nconst VotesCreate = (props) => {\r\n  return (\r\n    <Create {...props}>\r\n      <SimpleForm>\r\n        <TextInput source=\"fullname\"/>\r\n        <TextInput source=\"kpi\"/>\r\n        <TextInput source=\"probationary_vote\"/>\r\n        <TextInput source=\"promotion_vote\" />\r\n        <TextInput source=\"personal_development\"/>        \r\n        <TextInput source=\"bonus\"/>\r\n        <TextInput source=\"discipline\"/>\r\n        <TextInput source=\"employees_vote\"/>                 \r\n        <DateInput source=\"created_at\"/>  \r\n      </SimpleForm>\r\n    </Create>\r\n  );\r\n};\r\nexport default VotesCreate;\r\n","import React from 'react';\r\nimport {\r\n  List,\r\n  Datagrid,\r\n  TextField,\r\n  EditButton,\r\n  DeleteButton,\r\n  DateField,\r\n  NumberField,\r\n  Filter,\r\n  SelectInput,\r\n  ReferenceInput,\r\n  TextInput,\r\n  DeleteWithConfirmButton,\r\n  ShowButton\r\n} from 'react-admin';\r\n\r\nconst TimeKeepingFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"Name\" source=\"fullname\" reference=\"timekeeping\" allowEmpty>\r\n            <SelectInput optionText=\"fullname\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\nconst TimeKeepingList = (props) => {\r\n  return (\r\n    <List {...props} filters={<TimeKeepingFilter/>}>\r\n      <Datagrid>\r\n        <TextField source=\"_id\" label = \"id\"/>\r\n        <TextField source=\"fullname\" />\r\n        <TextField source=\"position\" />\r\n        <NumberField source=\"workdays\" />\r\n        <TextField source=\"unpaid_leave\" />\r\n        <NumberField source=\"holidays\" />        \r\n        <NumberField source=\"checkin\"/>\r\n        <NumberField source=\"overtime\"/>\r\n        <TextField source=\"notes\"/>                 \r\n        <DateField source=\"created_at\"/>      \r\n        <EditButton label=\"Edit\" basePath=\"/timekeeping\" />\r\n        <DeleteWithConfirmButton label=\"Delete\" basePath=\"/timekeeping\"/>\r\n        <ShowButton source=\"Show\"/>\r\n      </Datagrid>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TimeKeepingList;\r\n","import React from 'react';\r\nimport { Edit, SimpleForm, TextInput, DateInput, NumberInput} from 'react-admin';\r\nconst TimeKeepingEdit = (props) => {\r\n  return (\r\n    <Edit {...props}>\r\n      <SimpleForm>\r\n        <TextInput disabled source=\"_id\" label = \"id\" />\r\n        <TextInput source=\"fullname\" />\r\n        <TextInput source=\"position\" />\r\n        <NumberInput source=\"workdays\" />\r\n        <TextInput source=\"unpaid_leave\" />\r\n        <NumberInput source=\"holidays\" />        \r\n        <NumberInput source=\"checkin\"/>\r\n        <NumberInput source=\"overtime\"/>\r\n        <TextInput source=\"notes\"/>                 \r\n        <DateInput source=\"created_at\"/>  \r\n      </SimpleForm>\r\n    </Edit>\r\n  );\r\n};\r\n\r\nexport default TimeKeepingEdit;\r\n","import React from 'react';\r\nimport { Create, SimpleForm, TextInput, DateInput, NumberInput  } from 'react-admin';\r\nconst TimeKeepingCreate = (props) => {\r\n  return (\r\n    <Create {...props}>\r\n      <SimpleForm>\r\n        <TextInput source=\"fullname\" />\r\n        <TextInput source=\"position\" />\r\n        <NumberInput source=\"workdays\" />\r\n        <TextInput source=\"unpaid_leave\" />\r\n        <NumberInput source=\"holidays\" />        \r\n        <NumberInput source=\"checkin\"/>\r\n        <NumberInput source=\"overtime\"/>\r\n        <TextInput source=\"notes\"/>                 \r\n        <DateInput source=\"created_at\"/>  \r\n      </SimpleForm>\r\n    </Create>\r\n  );\r\n};\r\n\r\nexport default TimeKeepingCreate;\r\n","import React from 'react';\r\nimport { Admin, Resource, ShowGuesser, Login } from 'react-admin';\r\nimport dataProvider from './dataProvider';\r\nimport Dashboard from './Dashboard';\r\nimport chat from './Chat';\r\nimport authProvider from './authProvider';\r\n//import LoginForm from './components/chat/LoginForm.jsx';\r\n\r\nimport EmployeesList from './components/employees/EmployeesList';\r\nimport EmployeesEdit from './components/employees/EmployeesEdit';\r\nimport EmployeesCreate from './components/employees/EmployeesCreate';\r\n\r\nimport UsersList from './components/users/UsersList';\r\nimport UsersEdit from './components/users/UsersEdit';\r\nimport UsersCreate from './components/users/UsersCreate';\r\n//import usersConfiguration from './components/users/index';\r\n\r\nimport SalaryList from './components/salary/SalariesList';\r\nimport SalaryEdit from './components/salary/SalariesEdit';\r\nimport SalaryCreate from './components/salary/SalariesCreate';\r\n\r\nimport VotesList from './components/votes/VotesList';\r\nimport VotesEdit from './components/votes/VotesEdit';\r\nimport VotesCreate from './components/votes/VotesCreate';\r\n\r\nimport TimeKeepingList from './components/timekeeping/TimeKeepingList';\r\nimport TimeKeepingEdit from './components/timekeeping/TimeKeepingEdit';\r\nimport TimeKeepingCreate from './components/timekeeping/TimeKeepingCreate';\r\n\r\n//icon\r\nimport EmployeeIcon from '@material-ui/icons/Person';\r\nimport UserIcon from '@material-ui/icons/People';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport ThumbUpAltSharpIcon from '@material-ui/icons/ThumbUpAltSharp';\r\nimport MenuBookSharpIcon from '@material-ui/icons/MenuBookSharp';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n//const projectID = \"0056905e-32d6-48aa-a93c-4c4d4808e8bb\";\r\n//authProvider={authProvider}\r\n\r\nconst MyLoginPage = () => (\r\n    <Login\r\n        // A random image that changes everyday\r\n        backgroundImage=\"https://www.smediavn.com/public/ckeditor/imagesimages/Tintuc/Tin%20cong%20nghe/Thang%2011%202016/Smart-city-minh-hoa-2.jpg\"\r\n    />\r\n);\r\n\r\nfunction App() {\r\n  //if (!localStorage.getItem('username')) return <LoginForm />;\r\n  return (\r\n    <Admin dataProvider={dataProvider} dashboard={Dashboard} chat={chat} authProvider={authProvider} loginPage={MyLoginPage}>\r\n    {permissions => [\r\n      permissions === 'admin' || permissions === 'employee'\r\n        ? <Resource\r\n        name=\"employees\"\r\n        list={EmployeesList}\r\n        edit={permissions === 'admin' ? EmployeesEdit : null}\r\n        create={EmployeesCreate }\r\n        icon={EmployeeIcon}\r\n        />\r\n        :null,\r\n      permissions === 'admin'\r\n        ? <Resource\r\n          name=\"users\"\r\n          list={UsersList}\r\n          edit={permissions === 'admin' ? UsersEdit : null}\r\n          create={permissions === 'admin' ? UsersCreate : null}\r\n          icon={UserIcon}\r\n        />\r\n        :null,\r\n      permissions === 'manager'|| permissions ==='admin'\r\n        ? <Resource\r\n          name=\"salaries\"\r\n          list={SalaryList}\r\n          edit={SalaryEdit}\r\n          create={SalaryCreate}\r\n          icon={AccountBalanceIcon}\r\n        />\r\n        :null,\r\n      <Resource\r\n        name=\"votes\"\r\n        list={VotesList}\r\n        edit={VotesEdit}\r\n        create={VotesCreate}\r\n        icon={ThumbUpAltSharpIcon}\r\n      />,\r\n      permissions === 'manager'|| permissions ==='admin'\r\n        ? <Resource\r\n          name=\"timekeeping\"\r\n          list={TimeKeepingList}\r\n          edit={TimeKeepingEdit}\r\n          create={TimeKeepingCreate}\r\n          icon={MenuBookSharpIcon}\r\n        />\r\n        :null,\r\n      <Resource\r\n        name=\"chat\"\r\n        list={chat}\r\n        icon={ChatIcon}\r\n      />\r\n      ]}\r\n    </Admin>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","const inMemoryJWTManager = () => {\r\n    let inMemoryJWT = null;\r\n    let isRefreshing = null;\r\n    let logoutEventName = 'ra-logout';\r\n    let refreshEndpoint = '/refresh-token';\r\n    let refreshTimeOutId;\r\n\r\n    const setLogoutEventName = name => logoutEventName = name;\r\n    const setRefreshTokenEndpoint = endpoint => refreshEndpoint = endpoint;\r\n\r\n    // This countdown feature is used to renew the JWT before it's no longer valid\r\n    // in a way that is transparent to the user.\r\n    const refreshToken = (delay) => {\r\n        refreshTimeOutId = window.setTimeout(\r\n            getRefreshedToken,\r\n            delay * 1000 - 5000\r\n        ); // Validity period of the token in seconds, minus 5 seconds\r\n    };\r\n\r\n    const abordRefreshToken = () => {\r\n        if (refreshTimeOutId) {\r\n            window.clearTimeout(refreshTimeOutId);\r\n        }\r\n    };\r\n\r\n    const waitForTokenRefresh = () => {\r\n        if (!isRefreshing) {\r\n            return Promise.resolve();\r\n        }\r\n        return isRefreshing.then(() => {\r\n            isRefreshing = null;\r\n            return true;\r\n        });\r\n    }\r\n\r\n    // The method make a call to the refresh-token endpoint\r\n    // If there is a valid cookie, the endpoint will set a fresh jwt in memory.\r\n    const getRefreshedToken = () => {\r\n        const request = new Request(refreshEndpoint, {\r\n            method: 'GET',\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n            credentials: 'include',\r\n        });\r\n\r\n        isRefreshing = fetch(request)\r\n            .then((response) => {\r\n                if (response.status !== 200) {\r\n                    ereaseToken();\r\n                    global.console.log(\r\n                        'Token renewal failure'\r\n                    );\r\n                    return { token: null };\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(({ token, tokenExpiry }) => {\r\n                if (token) {\r\n                    setToken(token, tokenExpiry);\r\n                    return true;\r\n                }\r\n                ereaseToken();\r\n                return false;\r\n            });\r\n\r\n        return isRefreshing;\r\n    };\r\n\r\n\r\n    const getToken = () => inMemoryJWT;\r\n\r\n    const setToken = (token, delay) => {\r\n        inMemoryJWT = token;\r\n        refreshToken(delay);\r\n        return true;\r\n    };\r\n\r\n    const ereaseToken = () => {\r\n        inMemoryJWT = null;\r\n        abordRefreshToken();\r\n        window.localStorage.setItem(logoutEventName, Date.now());\r\n        return true;\r\n    }\r\n\r\n    // This listener will allow to disconnect a session of ra started in another tab\r\n    window.addEventListener('storage', (event) => {\r\n        if (event.key === logoutEventName) {\r\n            inMemoryJWT = null;\r\n        }\r\n    });\r\n\r\n    return {\r\n        ereaseToken,\r\n        getRefreshedToken,\r\n        getToken,\r\n        setLogoutEventName,\r\n        setRefreshTokenEndpoint,\r\n        setToken,\r\n        waitForTokenRefresh,\r\n    }\r\n};\r\n\r\nexport default inMemoryJWTManager();"],"sourceRoot":""}